<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.qm</groupId>
    <artifactId>SJ_Agent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <dependencies>
        <!--map转换json-->
        <!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
        <!-- <dependency>
             <groupId>com.alibaba</groupId>
             <artifactId>fastjson</artifactId>
             <version>1.2.41</version>
         </dependency>-->

        <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
        <!--json转换-->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.3.1</version>
        </dependency>
       <!--获取服务器信息-->
        <dependency>
            <groupId>org.fusesource</groupId>
            <artifactId>sigar</artifactId>
            <version>1.6.4</version>
        </dependency>

        <!--JDBC驱动-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.28</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.30</version>
        </dependency>



        <!--json转map-->
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.9.8</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.9.8</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.9.8</version>
        </dependency>


    </dependencies>

    <!--第一种，将依赖jar包和程序分开-->
    <!--<build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.qm.test.GetJavaPath</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                    <compilerArguments>
                        <extdirs>src\main\resources\conf/</extdirs>
                    </compilerArguments>
                </configuration>
            </plugin>
        </plugins>
    </build>-->
    <!--第二种，把所有的依赖jar都打进同一个jar包内-->
      <!-- <build>
           <plugins>
               <plugin>
                   <artifactId>maven-compiler-plugin</artifactId>
                   <version>3.5.1</version>
                   <configuration>
                       <source>1.8</source>
                       <target>1.8</target>
                       <encoding>UTF-8</encoding>
                       &lt;!&ndash;<compilerArguments>
                           <extdirs>target/classes/conf/sigar-amd64-winnt.dll</extdirs>
                       </compilerArguments>&ndash;&gt;
                   </configuration>
               </plugin>
               <plugin>
                   <artifactId>maven-assembly-plugin</artifactId>
                   <configuration>
                       <appendAssemblyId>false</appendAssemblyId>
                       <descriptorRefs>
                           <descriptorRef>jar-with-dependencies</descriptorRef>
                       </descriptorRefs>
                       <archive>
                           <manifest>
                               &lt;!&ndash; 此处指定main方法入口的class&ndash;&gt;
                               <mainClass>com.qm.utils.GetWinDataInfoUtilinClass>
                           </manifest>
                       </archive>
                   </configuration>
                   <executions>
                       <execution>
                           <id>make-assembly</id>
                           <phase>package</phase>
                           <goals>
                               <goal>assembly</goal>
                           </goals>
                       </execution>

                   </executions>
               </plugin>

           </plugins>

           <resources>
               <resource>
               &lt;!&ndash;控制资源目录下要打包进去的文件，这里为全部打包;&ndash;&gt;
               <directory>src/main/resources</directory>
               <filtering>true</filtering>
               </resource>

               &lt;!&ndash;细粒度筛选&ndash;&gt;
               &lt;!&ndash;<resource>
                   <directory>src\main\resources\properties</directory>
                   <targetPath>properties</targetPath>
                   <filtering>false</filtering>
                   <includes>
                       <include>**/*.properties</include>
                   </includes>
               </resource>&ndash;&gt;
           </resources>
       </build>-->

    <!--第三种，基于jdk，使用assembly分别生成bin，conf，lib目录-->
        <build>
            <plugins>
                <!--<plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <classesDirectory>target/classes/</classesDirectory>
                        <archive>
                            &lt;!&ndash;生成的jar中，不要包含pom.xml和pom.properties这两个文件&ndash;&gt;
                            <addMavenDescriptor>false</addMavenDescriptor>
                            <manifest>
                                &lt;!&ndash; 程序主函数入口 &ndash;&gt;
                                <mainClass>com.qm.run.RunProject</mainClass>
                                &lt;!&ndash; 打包时 MANIFEST.MF文件不记录的时间戳版本 &ndash;&gt;
                                <useUniqueVersions>false</useUniqueVersions>
                                &lt;!&ndash; 是否要把第三方jar放到manifest的classpath中 &ndash;&gt;
                                <addClasspath>true</addClasspath>
                                &lt;!&ndash; 生成的manifest中classpath的前缀，填写依赖jar包相对于项目jar包的路径&ndash;&gt;
                                <classpathPrefix>lib/</classpathPrefix>
                            </manifest>
                            &lt;!&ndash; 配置清单（MANIFEST）属性 &ndash;&gt;
                            &lt;!&ndash;将资源文件目录添加到classpath中，打包后运行项目时则会在该目录下加载配置文件&ndash;&gt;
                            <manifestEntries>
                                &lt;!&ndash;jar中的MANIFEST.MF文件ClassPath需要添加conf目录才能读取到配置文件&ndash;&gt;
                                &lt;!&ndash;填写配置文件相对于项目jar包的路径&ndash;&gt;
                                <Class-Path>conf/.</Class-Path>
                            </manifestEntries>
                        </archive>
                        &lt;!&ndash; 过滤掉不希望包含在jar中的文件  &ndash;&gt;
                        <excludes>
                            <exclude>**/*.yml</exclude>
                            <exclude>**/*.properties</exclude>
                            <exclude>**/*.sh</exclude>
                            <exclude>**/*.bat</exclude>
                            <exclude>**/*.xml</exclude>
                            <exclude>**/*.so</exclude>
                            <exclude>**/*.dll</exclude>
                        </excludes>


                        &lt;!&ndash;添加文件到jar中的文件&ndash;&gt;
                      &lt;!&ndash;<includes>
                                <include>**/*.properties</include>
                                <include>**/*.xml</include>
                                <include>**/*.so</include>
                                <include>**/*.dll</include>
                      </includes>&ndash;&gt;




                    </configuration>
                </plugin>-->

                   <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-dependency-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>copy-dependencies</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>copy-dependencies</goal>
                                    </goals>
                                    <configuration>
                                        <!--${project.build.directory} class的输出目录不做设置的话默认代表项目根目录的target目录；也可以使用“自定义文件夹/自定义文件夹 例如：a/b”-->
                                        <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                        <excludeTransitive>false</excludeTransitive>
                                        <stripVersion>false</stripVersion>
                                        <includeScope>runtime</includeScope>
                                    </configuration>
                                </execution>
                            </executions>
                   </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <!-- 指定打包的jar包输出路径-->
                        <outputDirectory>
                            ${project.build.directory}/lib
                        </outputDirectory>
                        <!--不打入jar包的文件类型或者路径-->
                        <excludes>
                            <exclude>**/*.yml</exclude>
                            <exclude>**/*.properties</exclude>
                            <exclude>**/*.sh</exclude>
                            <exclude>**/*.bat</exclude>
                            <exclude>**/*.xml</exclude>
                            <exclude>**/*.so</exclude>
                            <exclude>**/*.dll</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.4</version>

                    <configuration>
                        <appendAssemblyId>false</appendAssemblyId>
                        <descriptorRefs>
                            <descriptorRef>jar-with-dependencies</descriptorRef>
                        </descriptorRefs>
                        <archive>
                            <manifest>
                                <mainClass>com.qm.utils.GetWinDataInfoUtil</mainClass>
                            </manifest>
                        </archive>
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!--打包之后配置文件的路径和打包前的配置文件路径，将需要复制的文件复制到指定路径-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>copy-resources</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <encoding>UTF-8</encoding>
                                <!--打成jar包后复制到的路径-->
                                <outputDirectory>
                                    ${project.build.directory}/conf
                                </outputDirectory>
                                <resources>
                                    <resource>
                                        <!--项目中的路径-->
                                        <directory>/conf</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                        <!--可配置多个提取复制路径只需要 “<id>”名字不一样即可-->

                        <execution>
                            <id>copy-sitting</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <encoding>UTF-8</encoding>
                                <outputDirectory>
                                    ${project.build.directory}/sitting
                                </outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>/sitting</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>

                        <execution>
                            <id>copy-doc</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <encoding>UTF-8</encoding>
                                <outputDirectory>
                                    ${project.build.directory}/doc
                                </outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>/doc</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                   </executions>
                </plugin>

                <!--<plugin>
                                    <groupId>org.apache.maven.plugins</groupId>
                                    <artifactId>maven-compiler-plugin</artifactId>
                                    <configuration>
                                        <source>1.6</source>
                                        <target>1.6</target>
                                    </configuration>
                                </plugin>-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.5.1</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
            </plugins>
        </build>



</project>